Lv. 0	rny_string 		89%
Lv. 0	문자 리스트를 문자열로 변환하기 		89%
Lv. 0	문자열 바꿔서 찾기 		89%
Lv. 0	접두사인지 확인하기 		89%
Lv. 0	n개 간격의 원소들 		89%
Lv. 0	접미사인지 확인하기 		89%

//0619

https://school.programmers.co.kr/learn/courses/30/lessons/181878
Lv. 0	원하는 문자열 찾기 		89%
배운것 
    문자열에서 정규식으로 패턴을 찾는 방법
        const reg1 = new RegExp('패턴', '옵션');
            
            new RegExp(pat, 'i'); 
                부분에서는 생성자 표기법을 사용하여 정규식 객체를 생성하고, 
                    new = 객체 생성
                        함수, 생성자, 클래스 등을 
                        new 연산자와 함께 호출하면 
                            그 결과로 객체가 반환
                문자열 pat를 RegExp 객체의 첫 번째 인수로 전달합니다. 
                두 번째 인수로 전달된 'i'는 정규식 플래그(옵션)입니다. 

            정규식 플래그(옵션)에 대해 설명드리겠습니다.
                i (ignore case): 대소문자를 구분하지 않습니다.
                g (global search): 문자열 내의 모든 패턴을 찾습니다.
                m (multiline): 문자열이 여러 줄인 경우 (\n 등의 문자가 포함된 경우)에도 패턴 검색을 수행합니다.

            위 코드에서 i 옵션을 사용했으므로 문자열 내에서 대소문자를 구분하지 않습니다. 
                따라서 위 코드에서 new RegExp(pat, 'i')는 
                    문자열 pat를 대소문자 구분 없이 검색하기 위한 정규식 객체를 생성합니다.

        reg1.test(str1) ? 1 : 0;
            test() 메서드는 
                (정규식 객체)와 
                (문자열)을 
                    문자열 대신 변수를 받을수도 있음
                (인수)로 받아, 
                
                해당 문자열에 정규식 패턴과 일치하는 부분이 있으면 
                true를, 그렇지 않으면 false를 반환합니다. 

 function solution(str1, pat) 
{
    let reg1 = new RegExp(pat, 'i');
    
    return reg1.test(str1) ? 1 : 0;
}       

https://school.programmers.co.kr/learn/courses/30/lessons/181901
Lv. 0	배열 만들기 1 		89%
function solution(int1, mult1) 
{
    let multArr = [];
    
    for(let i = 1; i <= int1; i++)
    {
        if (i % mult1 == 0)
            multArr.push(i);
    }
    
    return multArr;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181927
Lv. 0	마지막 두 원소 		89%
배운것  
    arr1.push(e); 작동방식
        return arr1.push(e); 하면 배열길이를 반환한다

    [...arr1]는 곧 배열 전체이므로
        return [...arr1, end1];
        하면 바로 push처럼 작동하고 return한다

function solution(nList) 
{
    let last1 = nList[nList.length - 1];
    let last2 = nList[nList.length - 2];
    let last0;
    
    last0 = (last1 > last2) ? last1 - last2 : last1 * 2;
    
    return [...nList, last0];
}


//0618

https://school.programmers.co.kr/learn/courses/30/lessons/181946
Lv. 0	문자열 붙여서 출력하기 		89%
어렵...

const readline = require('readline');
const rl = readline.createInterface
(
    {
        input: process.stdin,
        output: process.stdout
    }
);

let input = [];

rl.on
(
    'line', function (line) 
    {
        input = line.split(' ');
    }
).on
(
    'close', function () 
    {
        const str1 = input[0];
        const str2 = input[1];
        console.log(str1 + str2);
    }
);

https://school.programmers.co.kr/learn/courses/30/lessons/181892
Lv. 0	n 번째 원소부터 		89%
배운것
    slice에서 n번째원소의 인덱스는 n-1임을 잊지말자

function solution(intList, n) 
{
    return intList.slice(n-1, intList.length);
}

https://school.programmers.co.kr/learn/courses/30/lessons/181889
Lv. 0	n 번째 원소까지 		89%
배운것
    리스트의 특정 인덱스부터 특정 인덱스까지 잘라내기
        list1.slice(n1, n2);

function solution(intList, n) 
{
    return intList.slice(0, n);
}

//0616

https://school.programmers.co.kr/learn/courses/30/lessons/181849
Lv. 0	문자열 정수의 합 		89%
배운것  
    문자열에도 인덱스를 적용 가능
    정수형 캐스팅 
        parseInt();

function solution(numStr) 
{
    let sum1 = 0
    for(let i = 0; i < numStr.length; i++)
        sum1 += parseInt(numStr[i]); 
    return sum1;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181879
Lv. 0	길이에 따른 연산 		89%
배운것
    reduce 메소드 사용법
        arr1.reduce( (x1,x2) => x1 + x2)
        x1은 연산이 축적되는 대상
            기본적으로는 인덱스 0번이 대상
        x2는 연산이 계속되는 대상
            기본적으로 인덱스 1번이 되고
            연산이 끝나면 인덱스가 넘어감
        =>는 왼쪽을 오른쪽 연산에 넣어줌 
        x3, x4는 생략 가능
            x3은 현재인덱스currentIndex
            x4는 원본배열=sourceArray

    어레이의 중간을 잘라내고 붙이는 법, 걍 검색해봄
    arr1.splice(삭제할 요소의 인덱스, 자를 갯수)
        const numbers = [1, 2, 3, 4, 5];
        const indexToRemove = 2; // Remove the element at index 2
    
        numbers.splice(indexToRemove, 1); // Remove 1 element starting at index 2
        console.log(numbers); // Output: [1, 2, 4, 5]

function solution(numList) 
{
    return numList.length >= 11 
    ? numList.reduce( (st,nd) => st + nd)
    : numList.reduce( (st,nd) => st * nd)      
}

https://school.programmers.co.kr/learn/courses/30/lessons/181882
Lv. 0	조건에 맞게 수열 변환하기 1 		89%
배운것
    배열요소에 함수를 적용한 새 배열을 만드는 법 : 맵 함수
        arrNew = arr1.map( (arr1) => <함수>);
            배열의 각 요소에 대해 주어진 함수를 호출하여 
            그 결과로 이루어진 새로운 배열을 생성 
            원본 배열은 변경되지 않음 
            
            const newArray = array.map(callback(currentValue[, index[, array]])[, thisArg]);

            callback: 배열의 각 요소에서 호출하는 함수로, 최대 세 개의 인수를 받습니다.
            currentValue (필수): 배열의 현재 처리 중인 요소.
            index (선택): 배열의 현재 처리 중인 요소의 인덱스.
            array (선택): map()을 호출한 배열.
            thisArg (선택): callback을 실행할 때 this로 사용되는 값.

        arr1.map( (arr1) => <함수> ); 쓸때,
            함수에 
                if else if 하고 
                return arr1 하면
                   if문들과 관련없는 요소도 가져올 수 있다

function solution(arrInt) 
{   
    return arrInt.map
    ( 
        (arrInt) => 
        {
            if (arrInt >= 50 && arrInt % 2 === 0)
                return arrInt = arrInt / 2;
           
            else if (arrInt < 50 && arrInt % 2 === 1)
                return arrInt = arrInt * 2;
        
            return arrInt;
        }                      
    )   
}


















888888888888888888888880
https://school.programmers.co.kr/learn/courses/30/lessons/120852
Lv. 0	소인수분해 		80%	-	FALSE

function solution(num) 
{
    let primeN;
    let primeArr = [];
    let flag = false
    
    for(let i = 0, p = 2, nw; i*i <= num; i++)
        {
            if ( num % p === 0 )
            {
                nw = p;
                p++;
            }
                
            for( let j = 0; j <= num; j++)
            {
                if ( (nw % primeArr[j]) === 0)
                {
                    flag = false;    
                    break;
                }
                else 
                    flag = true;    
            }   
            
            if (flag == true)
                primeArr.push(nw);
        
        }
    return primeArr;
}

//0614

https://school.programmers.co.kr/learn/courses/30/lessons/181843
Lv. 0	부분 문자열인지 확인하기 		89%	-	FALSE

function solution(str1, target) 
{
    return Number( str1.includes(target) );   
}

https://school.programmers.co.kr/learn/courses/30/lessons/181876
Lv. 0	소문자로 바꾸기		89%	-	FALSE

function solution(str1)
{
    return str1.toLowerCase();
}

https://school.programmers.co.kr/learn/courses/30/lessons/181926
Lv. 0	수 조작하기 1 		89%	-	FALSE
function solution(n, ctrlStr) {
    for(let i = 0; i < ctrlStr.length; i++)
        {
            if (ctrlStr[i] == "w")
                n += 1;
            else if (ctrlStr[i] == "s")
                n -= 1;
            else if (ctrlStr[i] == "d")
                n += 10;
            else if (ctrlStr[i] == "a")
                n -= 10;
        }
    return n;
}





















//sprint for 20230613

https://school.programmers.co.kr/learn/courses/30/lessons/120851
Lv. 0	숨어있는 숫자의 덧셈 (1)		89%	-	FALSE	

function solution(str1) 
{
    let sumNum = 0;
    
    for(i=0; i < str1.length; i++)
    {
        if ( str1[i] == parseInt(str1[i]) )
            sumNum += parseInt(str1[i])
    }
    
    return sumNum;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181920
Lv. 0	카운트 업 		89%	-	FALSE		
배운것
    for문에 인수 여러개 쓰기
        for(i = start, k = 0; i <= end; i++, k++)
            arrN[k] = i;
    
function solution(start, end) 
{
    let arrN = [];
    
    for(i = start, k = 0; i <= end; i++, k++)  
        arrN[k] = i;
    
    return arrN;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181875
Lv. 0	배열에서 문자열 대소문자 변환하기 		89%	-	FALSE	
배운것
    문자열을 소문자로 바꾸기
        oneStr.toLowerCase()

function solution(strArr) 
{
    let odEvArr = [];
    let oneStr = "";
    
    for(i=0; i < strArr.length; i++)
    {
        oneStr = strArr[i];
        odEvArr[i] = (0 == i % 2) ? oneStr.toLowerCase() : strArr[i].toUpperCase();
    }

    return odEvArr;
}	

https://school.programmers.co.kr/learn/courses/30/lessons/181840
Lv. 0	정수 찾기 		89%	-	FALSE	
배운것
    포함하는지 찾는 includes 메소드의 양식
         <긴거>.includes(<요소>);  

function solution(nArr, n) 
{
  return Number( nArr.includes(n) );  
}

https://school.programmers.co.kr/learn/courses/30/lessons/120813
Lv. 0	짝수는 싫어요		89%	-	FALSE		

function solution(n) 
{
    let oddArr = [];
    
    for(i=0, p = 0; i < n / 2; i++, p += 2)
        oddArr[i] = 1 + p          
    
    return oddArr;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181869
Lv. 0	공백으로 구분하기 1 		89%	-	FALSE																					

function solution(str1)
{
    let sepWord = [];
    let word = "";
    let i=0
    
    while (i < str1.length)
    {        
        while (str1[i] !== " " && i < str1.length)
        {
            word += str1[i];
            i++;
        }   
    
        sepWord.push(word); 
        word = "";
        i++;
     
        
        while (str1[i] === " " && i < str1.length)
        {
            i++;
        }      
    } 

    return sepWord;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181884
Lv. 0	n보다 커질 때까지 더하기 		89%		

function solution(intArr, n) 
{
    let sum1 = 0;
    let i = 0;
    
    while(i < intArr.length && sum1 <= n)
    {
        sum1 += intArr[i];
        i++;        
    }
      
    return sum1;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181835
Lv. 0	조건에 맞게 수열 변환하기 3 		89%		

function solution(intArr, n) 
{
    let i = 0;
    
    if (1 == n % 2)
    {
        while(i < intArr.length)
        {
            intArr[i] *= n;
            i++;
        }
    }
    
    if (1 != n % 2)
    {
        while(i < intArr.length)
        {
            intArr[i] += n;
            i++;
        } 
    }
    
    return intArr;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181899
Lv. 0	카운트 다운 		89%											

function solution(start, end) 
{
    let decArr = [];
    
    while (start >= end)
    {
        decArr.push(start);
        start--;            
    }
    return decArr
}










//20230613
https://school.programmers.co.kr/learn/courses/30/lessons/120906
Lv. 0	자릿수 더하기		89%	-	FALSE	while, Math.floor		
배운것
    int로 캐스팅
        parseInt();

function solution(n) 
{
    let i = 0;
    let summ = 0;
    
    let arrN = [];
    arrN = n.toString().split("");
    
    for(i=0; i < arrN.length; i++)
    {
        summ += parseInt(arrN[i]);
    }
    
    return summ;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181873
Lv. 0	특정한 문자를 대문자로 바꾸기 		89%	-	FALSE	includes, toUpperCase		
배운것 
    문자열은 인덱스를 지정해, 
    하나를 빼올수는 있지만, 
    개별 요소를 수정할 수는 없다.

    대분자로 바꾸기
        <char>.toUpperCase();
    
    빈 문자열 선언하는 방법
        let str1 = "";

    문자열의 길이
        str1.length;

    빈 문자열에 문자쌓기
        for(i=0; i < n; i++)
            str2 +=str1[i]; 
    
function solution(str1, char1) 
{ 
    let i = 0;
    let strUp = "";
    
    while(i < str1.length)
    {
        if (str1[i] == char1)
            strUp += char1.toUpperCase();
        else
            strUp += str1[i];
        i++;
    }
    
    return strUp;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181907
Lv. 0	문자열의 앞의 n글자 		89%	-	FALSE	slice, length																				

function solution(str1, n) 
{
   let str2 = "";
    
    for(i=0; i < n; i++)
        str2 +=str1[i]; 
    return str2;
}















//20230612

https://school.programmers.co.kr/learn/courses/30/lessons/181936
공배수

function solution(number, n, m) 
{
    let nem = number/n;
    let mem = number/m;
    
    return ( nem==Math.floor(nem) ) 
        && ( mem==Math.floor(mem) ) 
        ? 1 : 0
}

https://school.programmers.co.kr/learn/courses/30/lessons/181937
n의 배수

function solution(number, n) 
{
    let nem = number/n;
    
    return ( nem==Math.floor(nem) ) ? 1 : 0;
}

https://school.programmers.co.kr/learn/courses/30/lessons/181845
문자열로 변환
배운것
    숫자를 문자열로 바꾸려면
        <변수명>.toString();

function solution(n) 
{
    return stringNumber = n.toString();
}

//20230610

https://school.programmers.co.kr/learn/courses/30/lessons/181929
원소들의 곱과 합
배운것
    statement의 참거짓 판별
        Boolean()
    boolean 값의 숫자 캐스팅
        Number()

function solution(numList) 
{
    let sSum = 0;
    let xXum = 1;
  
    for(i=0; i < numList.length; i++)
        xXum = xXum * numList[i];
     for(i=0; i < numList.length; i++)
        sSum += numList[i];
   
    sSum = sSum * sSum;
    
    return Number( Boolean(xXum < sSum) );
}

https://school.programmers.co.kr/learn/courses/30/lessons/181850
정수 부분

function solution(flo)
{
    return Math.floor(flo);
}

https://school.programmers.co.kr/learn/courses/30/lessons/181842
부분 문자열
배운것
    문자열안에 문자열이 있는지 확인하려면
        str2.includes(str1)

function solution(str1, str2) 
{
  return Number( Boolean( str2.includes(str1) ) );  
}

https://school.programmers.co.kr/learn/courses/30/lessons/120825
문자 반복 출력하기
배운것
    배열을 문자열로 합치기
        arr1.join("")

function solution(str1, n) 
{
    let nStr = [];
    
    for(i=0;i<str1.length;i++)
      nStr[i] = str1[i].repeat(n);
    
    return nStr.join("");
}

https://school.programmers.co.kr/learn/courses/30/lessons/181848
문자열을 정수로 변환하기

function solution(nStr) 
{
    return Number(nStr);
}

https://school.programmers.co.kr/learn/courses/30/lessons/181933
flag에 따라 다른 값 반환하기

function solution(n1, n2, flag) 
{
    return flag ? n1 + n2 : n1 - n2;
}











//20230609

//https://school.programmers.co.kr/learn/courses/30/lessons/120585
//머쓱이보다 키 큰 사람

function solution(highArr, heightt) 
{
    return highArr.filter((n) => n > heightt).length;  
}


//https://school.programmers.co.kr/learn/courses/30/lessons/120903
//배열의 유사도

function solution(string1, string2) 
{
    let i = 0;
    let sum = 0;
    
    if (string1.length > string2.length)
    {
        while (i < string2.length)
        {
            sum += string1.includes(string2[i])
            i++;
        }
    }
    else
    {
        while (i < string1.length)
        {
            sum += string2.includes(string1[i])
            i++;
        }   
    }
    return sum;
}


//https://school.programmers.co.kr/learn/courses/30/lessons/120809
//배열 두배 만들기

function solution(intArr) 
{
    return  intArr.map((num) => num * 2);
}


//20230605

https://school.programmers.co.kr/learn/courses/30/lessons/120847
최댓값 만들기 (1)
배운것 :
sort의 역순 정렬

nums.sort((a, b) => b - a);
function solution(nums) 
{
    nums.sort((a, b) => b - a);
    return nums[0] * nums[1];
}



https://school.programmers.co.kr/learn/courses/30/lessons/120836
순서쌍의 개수

function solution(n) 
{
  //이중 for문
    let count = 0;
    for (let i = 1; i <= n; i++)
    {
        if (n / i == Math.floor(n / i))
            count++;
    }
    return count;
}



https://school.programmers.co.kr/learn/courses/30/lessons/120818
옷가게 할인 받기

function solution(price) 
{
  //if else, Math.floor
    if (price >= 50_0000)
        return Math.floor(price * (1-0.2));
    else if (price >= 30_0000)
        return Math.floor(price * (1-0.1));
    else if (price >= 10_0000)
       return Math.floor(price * (1-0.05));
    else
        return price;
}

//20230604

chttps://school.programmers.co.kr/learn/courses/30/lessons/120826
특정 문자 제거하기
배운것 : 
split 메소드 = 문자열을 뜯어서 배열로 만들어 줌

function solution(stringg, letter) 
{
    let withoutL = stringg.split("").filter(bet => bet !== letter);
    return withoutL.join("");
}


https://school.programmers.co.kr/learn/courses/30/lessons/120811
중앙값 구하기
배운것 :
인덱스에 무언가를 나눈값을 쓰려면 Math.floor를 쓸것

function solution(intArr) 
{
    intArr.sort((a,b) => a - b); 
    return intArr[Math.floor(intArr.length / 2)];
}


https://school.programmers.co.kr/learn/courses/30/lessons/120583
중복된 숫자 개수
배운것 :
filter 메소드의 =>

function solution(array, n) 
{
   return howMany = array.filter((num) => num == n).length;    
}

//20230603

https://school.programmers.co.kr/learn/courses/30/lessons/120822
문자열 뒤집기

function solution(stringg) 
{
    let i = 0;
    let gnirtss = [];
    while (i <= stringg.length)
    {
        gnirtss[i] = stringg[stringg.length - i];
        i++;
    }
    return gnirtss.join('');
}


https://school.programmers.co.kr/learn/courses/30/lessons/120898
편지

function solution(message) 
{
   return 2*message.length;
}


https://school.programmers.co.kr/learn/courses/30/lessons/120821
배열 뒤집기
배운것 shift
function solution(arrayy) 
{
    let i = 0;
    let yyarra = [];
    while (i <= arrayy.length)
    {
        yyarra[i] = arrayy[arrayy.length - i];
        i++;
    }
    yyarra.shift();
    return yyarra;
}




https://school.programmers.co.kr/learn/courses/30/lessons/120841
점의 위치 구하기

function solution(dotXy) 
{
    if (dotXy[0] > 0)
        if (dotXy[1] > 0)
            return 1;
        else
            return 4;
    else
        if (dotXy[1] > 0)
            return 2;
        else
            return 3;
}


https://school.programmers.co.kr/learn/courses/30/lessons/120819
아이스 아메리카노
배운것 : Math.floor(값)

function solution(money) 
{
  return [Math.floor(money / 5500), money % 5500];
}



https://school.programmers.co.kr/learn/courses/30/lessons/181933
flag에 따라 다른 값 반환하기
배운것 : 삼항연산자
flag ? 실행1 : 실행2 ;

function solution(a, b, flag) 
{
    return answerr = flag ? a+b : a - b;
}

//20230601

https://school.programmers.co.kr/learn/courses/30/lessons/120889
삼각형의 완성조건 (1)
배운것 = eval() / ... / join('+') / Math.sign

function solution(sides) 
{
    if (1 == Math.sign(eval(sides.join('+')) - 2 * Math.max(...sides)))
        return 1; 
    else
        return 2;   
}


https://school.programmers.co.kr/learn/courses/30/lessons/120854
배열 원소의 길이

function solution(strlist) {
    var lengArr = [];
    var i = 0;
    while (i < strlist.length)
    {
        lengArr[i] = strlist[i].length
        i++;
    }
    return lengArr;
}


https://school.programmers.co.kr/learn/courses/30/lessons/120849
모음 제거

function solution(stringg) {
    let vowLess = [];
    let i = 0;
    let k = 0;
    while (i < stringg.length)
    {
        if (stringg[i] != 'a')
              if (stringg[i] != 'e')
                    if (stringg[i] != 'i')
                          if (stringg[i] != 'o')
                                if (stringg[i] != 'u')
                                {
                                    vowLess[k] = stringg[i];
                                    k++;
                                }
        i++;
    }
    return vowLess.join('');
}


//20230531

https://school.programmers.co.kr/learn/courses/30/lessons/120814
피자 나눠 먹기 (1)

function solution(n) 
{
    return Math.floor(n / 7) + (0 != n % 7); 
}


https://school.programmers.co.kr/learn/courses/30/lessons/120833#
배열 자르기

function solution(numbers, num1, num2) 
{
    let i = 0;
    let k = num1;
    let toThe = [];
    while(k <= num2)
    {
        toThe[i] = numbers[k];
        i++;
        k++;
    }
    return toThe;
}


https://school.programmers.co.kr/learn/courses/30/lessons/120824?language=javascript
짝수 홀수 개수

function solution(numList) 
{
    let i = 0;
    let j = 0;
    let k = 0;
    while (i < numList.length)
    {
        if (0 == (numList[i] % 2)) 
            j++;
        else
            k++;
        i++;    
    }
    
    let oddEven = [j, k];
    return oddEven;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120824?language=javascript
짝수 홀수 개수

//it was treated as correct
//test case 3/6 succeed
function solution(numList) 
{
    let i = 0;
    let j = 0;
    let k = 0;
    while (i < numList.length)
    {
        if (0 == (numList[i] % 2)) 
            j++;
        else
            k++;
        i++;
    }

    let oddEven = [j, k];
    return oddEven;
}
/* test case 3/6 succeed
테스트 1
입력값 〉    [1, 2, 3, 4, 5]
기댓값 〉    [2, 3]
실행 결과 〉    테스트를 통과하였습니다.
테스트 2
입력값 〉    [1, 3, 5, 7]
기댓값 〉    [0, 4]
실행 결과 〉    테스트를 통과하였습니다.
테스트 3
입력값 〉    [0, 0, 0, 1, 0, 1, 0, 3, 0, 2, 2, 2, 2, 0, 0, 2, 2, 0]
기댓값 〉    [6, 3]
실행 결과 〉    실행한 결괏값 [15,3]이 기댓값 [6,3]과 다릅니다.
테스트 4
입력값 〉    [0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2]
기댓값 〉    [4, 2]
실행 결과 〉    실행한 결괏값 [9,2]이 기댓값 [4,2]과 다릅니다.
테스트 5
입력값 〉    []
기댓값 〉    [0, 0]
실행 결과 〉    테스트를 통과하였습니다.
테스트 6
입력값 〉    [0, 0]
기댓값 〉    [0, 0]
실행 결과 〉    실행한 결괏값 [2,0]이 기댓값 [0,0]과 다릅니다.
테스트 결과 (~˘▾˘)~
6개 중 3개 성공 
*/
 
//it was treated as wrong
//test case 6/6 succeed
function solution(numList) 
{
    let i = 0;
    let j = 0;
    let k = 0;
    while (i < numList.length)
    {
        while (0 == numList[i])
            i++;
        if (0 == (numList[i] % 2)) 
            j++;
        else if (1 == (numList[i] % 2)) 
            k++;
        i++;
    }

    let oddEven = [j, k];
    return oddEven;
}
/* test case 3/6 succeed
테스트 1
입력값 〉    [1, 2, 3, 4, 5]
기댓값 〉    [2, 3]
실행 결과 〉    테스트를 통과하였습니다.
테스트 2
입력값 〉    [1, 3, 5, 7]
기댓값 〉    [0, 4]
실행 결과 〉    테스트를 통과하였습니다.
테스트 3
입력값 〉    [0, 0, 0, 1, 0, 1, 0, 3, 0, 2, 2, 2, 2, 0, 0, 2, 2, 0]
기댓값 〉    [6, 3]
실행 결과 〉    테스트를 통과하였습니다.
테스트 4
입력값 〉    [0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2]
기댓값 〉    [4, 2]
실행 결과 〉    테스트를 통과하였습니다.
테스트 5
입력값 〉    []
기댓값 〉    [0, 0]
실행 결과 〉    테스트를 통과하였습니다.
테스트 6
입력값 〉    [0, 0]
기댓값 〉    [0, 0]
실행 결과 〉    테스트를 통과하였습니다.
테스트 결과 (~˘▾˘)~
6개 중 6개 성공 
*/


//20230530

https://school.programmers.co.kr/learn/courses/30/lessons/120807
숫자 비교하기
function solution(num1, num2) {
  if (num1 === num2)
    return 1;
  else
    return -1;
}

ttps://school.programmers.co.kr/learn/courses/30/lessons/120820
나이출력
function solution(age) {
  var year = 2022 - age + 1;
  return year;
}
https://school.programmers.co.kr/learn/courses/30/lessons/120802
두수의 합

function solution(num1, num2) {
  var answer = num1 + num2;
  return answer;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120805
몫 구하기
function solution(num1, num2) {
  var answer = Math.floor(num1 / num2);
  return answer;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120806
두 수의 나눗셈
function solution(num1, num2) {
  var answer = Math.floor(num1 / num2 * 1000);
  return answer;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120829
각도기
function solution(angle) {
  if (angle < 90)
    return 1;
  else if (angle == 90)
    return 2
  else if (angle > 90 && angle < 180)
    return 3;
  else
    return 4;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120831
짝수의 합
function solution(n) {
  if ((Math.floor(n / 2)) != (n / 2))
    n = n - 1;
  let here = 0;
  while (n > 0) {
    here = here + n;
    n = n - 2;
  }
  return here;
}

https://school.programmers.co.kr/learn/courses/30/lessons/120817
배열의 평균값
function solution(numbers) 
{
    var totall = 0;
    var i = 0;
    while (numbers[i])
    {
        totall = totall + numbers[i];        
        i++;
    }
    return (totall/i);
}

https://school.programmers.co.kr/learn/courses/30/lessons/120830
양꼬치
function solution(n, k) 
{
    totall = 12000*n + 2000*k;
    totall = totall - 2000 * Math.floor(n / 10);
    return totall;
}

//20230529

//https://school.programmers.co.kr/learn/courses/30/lessons/181910

function solution(my_string, n) {
    
  var whenCut = my_string.length - n;
  var answer = my_string.substring(whenCut);
  return answer;
}

//https://school.programmers.co.kr/learn/courses/30/lessons/120810

function solution(num1, num2) {
  var answer = num1 % num2;
  return answer;
}

//https://school.programmers.co.kr/learn/courses/30/lessons/181951

const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = line.split(' ');
}).on('close', function () {
    console.log('a = ' + Number(input[0]));   
    console.log("b = " + Number(input[1]));
});

//https://school.programmers.co.kr/learn/courses/30/lessons/120803

function solution(num1, num2) {
  var answer = num1 - num2;
  return answer;
}
//https://school.programmers.co.kr/learn/courses/30/lessons/120804

function solution(num1, num2) {
  var answer = num1 * num2;
  return answer;
}
